diff --git a/dlls/dinput/joystick_hid.c b/dlls/dinput/joystick_hid.c
index 8bae1f35b3b..39d0c4f0ef0 100644
--- a/dlls/dinput/joystick_hid.c
+++ b/dlls/dinput/joystick_hid.c
@@ -837,22 +837,10 @@ static void set_report_value( struct hid_joystick *impl, char *report_buf,
 {
     ULONG report_len = impl->caps.OutputReportByteLength;
     PHIDP_PREPARSED_DATA preparsed = impl->preparsed;
-    LONG log_min, log_max, phy_min, phy_max;
     NTSTATUS status;
 
     if (!caps) return;
 
-    log_min = caps->logical_min;
-    log_max = caps->logical_max;
-    phy_min = caps->physical_min;
-    phy_max = caps->physical_max;
-
-    if (phy_max || phy_min)
-    {
-        if (value > phy_max || value < phy_min) value = -1;
-        else value = log_min + (value - phy_min) * (log_max - log_min) / (phy_max - phy_min);
-    }
-
     status = HidP_SetUsageValue( HidP_Output, caps->usage_page, caps->link_collection,
                                  caps->usage_min, value, preparsed, report_buf, report_len );
     if (status != HIDP_STATUS_SUCCESS) WARN( "HidP_SetUsageValue %04x:%04x returned %#lx\n",
@@ -935,6 +923,8 @@ static HRESULT hid_joystick_get_property( IDirectInputDevice8W *iface, DWORD pro
     return DIERR_UNSUPPORTED;
 }
 
+static LONG scale_and_clamp_value( LONG value, struct hid_value_caps *caps );
+
 static HRESULT hid_joystick_send_device_gain( IDirectInputDevice8W *iface, LONG device_gain )
 {
     struct hid_joystick *impl = impl_from_IDirectInputDevice8W( iface );
@@ -950,6 +940,7 @@ static HRESULT hid_joystick_send_device_gain( IDirectInputDevice8W *iface, LONG
     status = HidP_InitializeReportForID( HidP_Output, report->id, impl->preparsed, report_buf, report_len );
     if (status != HIDP_STATUS_SUCCESS) return status;
 
+    device_gain = scale_and_clamp_value( device_gain, report->device_gain_caps );
     set_report_value( impl, report_buf, report->device_gain_caps, device_gain );
 
     if (!WriteFile( impl->device, report_buf, report_len, NULL, NULL )) return DIERR_INPUTLOST;
@@ -1237,6 +1228,25 @@ static LONG scale_value( ULONG value, struct object_properties *properties )
     return phy_min + MulDiv( tmp - log_min, phy_max - phy_min, log_max - log_min );
 }
 
+static LONG scale_and_clamp_value( LONG value, struct hid_value_caps *caps )
+{
+    LONG log_min, log_max, phy_min, phy_max;
+    
+    if (!caps) return value;
+
+    log_min = caps->logical_min;
+    log_max = caps->logical_max;
+    phy_min = caps->physical_min;
+    phy_max = caps->physical_max;
+
+    if (phy_max || phy_min)
+    {
+        value = max(min(value, phy_max), phy_min);
+        value = log_min + (value - phy_min) * (log_max - log_min) / (phy_max - phy_min);
+    }
+    return value;
+}
+
 static LONG scale_axis_value( ULONG value, struct object_properties *properties )
 {
     LONG tmp = sign_extend( value, properties ), log_ctr, log_min, log_max, phy_ctr, phy_min, phy_max;
@@ -2934,6 +2944,13 @@ static HRESULT WINAPI hid_joystick_effect_GetEffectStatus( IDirectInputEffect *i
 
 static void set_parameter_value( struct hid_joystick_effect *impl, char *report_buf,
                                  struct hid_value_caps *caps, LONG value )
+{
+    value = scale_and_clamp_value( value, caps );
+    return set_report_value( impl->joystick, report_buf, caps, value );
+}
+
+static void set_parameter_value_no_scaling( struct hid_joystick_effect *impl, char *report_buf,
+                                 struct hid_value_caps *caps, LONG value )
 {
     return set_report_value( impl->joystick, report_buf, caps, value );
 }
@@ -2956,7 +2973,11 @@ static void set_parameter_value_us( struct hid_joystick_effect *impl, char *repo
     LONG exp;
     if (!caps) return;
     exp = caps->units_exp;
-    if (value == INFINITE) value = caps->physical_min - 1;
+    if (value == INFINITE)
+    {
+        value = caps->physical_min - 1;
+        set_parameter_value_no_scaling( impl, report_buf, caps, value );
+    }
     else if (caps->units != 0x1003) WARN( "unknown time unit caps %#lx\n", caps->units );
     else if (exp < -6) while (exp++ < -6) value *= 10;
     else if (exp > -6) while (exp-- > -6) value /= 10;
